<view:PatternzView x:Class="PatternsUI.View.DataRecordsView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:view="clr-namespace:PatternsUI.View"
             xmlns:viewmodel="clr-namespace:PatternsUI.ViewModel" 
             xmlns:converters="clr-namespace:PatternsUI.Converters"
             d:DataContext="{d:DesignInstance Type=viewmodel:DataRecordsViewModel}"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800">

    <view:PatternzView.Resources>
        <viewmodel:DataRecordsViewModel x:Key="ViewModel"/>
        <converters:BoolToVisibilityConverter x:Key="BoolToVisibilityConverter"/>
        <converters:InverseBoolToVisiblityConverter x:Key="InverseBoolToVisibilityConverter"/>
        <converters:InverseBooleanConverter x:Key="InverseBooleanConverter"/>
        <converters:DateTextConverter x:Key="DateTextConverter" />
    </view:PatternzView.Resources>

    <Grid Background="Ivory">
        <Grid x:Name="MenuSpacing" Height="25" VerticalAlignment="Top" HorizontalAlignment="Center">
            <TextBlock Text="Welcome to the data records page"/>
        </Grid>
        <Grid Margin="30" x:Name="PageGrid" DataContext="{StaticResource ViewModel}">
            <Grid.RowDefinitions>
                <RowDefinition />
                <RowDefinition Height="3*"/>
                <RowDefinition/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="2*"/>
                <ColumnDefinition/>
            </Grid.ColumnDefinitions>
            <Grid x:Name="TitleGrid">
                <Grid x:Name="TitleButtons">
                    <Grid.Style>
                        <Style TargetType="Grid">
                            <Setter Property="Visibility" Value="Collapsed"/>
                            <Style.Triggers>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding IsFileLoaded}" Value="False"/>
                                        <Condition Binding="{Binding IsEditingFileName}" Value="False"/>
                                    </MultiDataTrigger.Conditions>
                                    <Setter Property="Visibility" Value="Visible"/>
                                </MultiDataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Grid.Style>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition/>
                        <ColumnDefinition/>
                    </Grid.ColumnDefinitions>
                    <Button Content="New" 
                            FontSize="32" 
                            Width="120" 
                            Height="50" 
                            x:Name="NewButton" 
                            Command="{Binding NewFileCommand}"/>
                    <Button Content="Open" 
                            FontSize="32" 
                            Width="120" 
                            Height="50" 
                            x:Name="OpenButton" 
                            Grid.Column="1" 
                            Command="{Binding OpenFileCommand}"/>
                </Grid>
                <Grid x:Name="TitleTextGrid" Visibility="{Binding IsFileLoaded, Converter={StaticResource BoolToVisibilityConverter}}" >
                    <Grid.Style>
                        <Style TargetType="Grid">
                            <Setter Property="Visibility" Value="Collapsed"/>
                            <Style.Triggers>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding IsFileLoaded}" Value="True"/>
                                        <Condition Binding="{Binding IsEditingFileName}" Value="False"/>
                                    </MultiDataTrigger.Conditions>
                                    <Setter Property="Visibility" Value="Visible"/>
                                </MultiDataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Grid.Style>
                    <StackPanel Orientation="Horizontal">
                        <TextBlock x:Name="TitleText" Text="{Binding FileName, FallbackValue=Title}" FontSize="48" MaxWidth="300" />
                        <TextBlock Margin="0,10">
                            <Hyperlink x:Name="ChangeTitleText" Command="{Binding EditFileNameCommand}"/>
                            Change
                        </TextBlock>
                    </StackPanel>
                </Grid>
            <Grid x:Name="TitleTextboxGrid" 
                  Visibility="{Binding IsEditingFileName, Converter={StaticResource BoolToVisibilityConverter}}" 
                  Grid.ColumnSpan="2">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition/>
                        <ColumnDefinition Width="2*"/>
                        <ColumnDefinition/>
                    </Grid.ColumnDefinitions>
                    <Label Content="File Name:" FontSize="24" Margin="0,20" Height="45"/>
                    <TextBox x:Name="TitleTextbox" FontSize="24" Text="{Binding NewFileName}" KeyDown="TitleTextbox_KeyDown" Grid.Column="1" MaxHeight="45"/>
                    <Button Content="Save" Name="SaveFileNameButton" Grid.Column="2" Height="40" Width="60" FontSize="24" Command="{Binding SaveFileNameCommand}"/>
                </Grid>
            </Grid>
            <Grid Grid.Column="1" x:Name="ControlsGrid">
                <Grid.RowDefinitions>
                    <RowDefinition/>
                    <RowDefinition Height="12*"/>
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition/>
                    <ColumnDefinition Width="0.4*"/>
                </Grid.ColumnDefinitions>
                <Grid Grid.ColumnSpan="2" Margin="100,0,0,0" Grid.RowSpan="2">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition/>
                        <ColumnDefinition/>
                    </Grid.ColumnDefinitions>
                    <Button x:Name="UndoButton" 
                            Height="35" 
                            Width="35" 
                            FontSize="32"
                            FontWeight="DemiBold" 
                            Command="{Binding UndoCommand}">
                        <TextBlock Text="↶" Margin="0,-25"/>
                    </Button>
                    <Button x:Name="RedoButton" 
                            Height="35" 
                            Width="35" 
                            FontSize="32" 
                            FontWeight="DemiBold" 
                            Command="{Binding RedoCommand}" 
                            Grid.Column="1">
                        <TextBlock Text="↷" Margin="0,-25"/>
                    </Button>
                </Grid>
            </Grid>
            <Grid Grid.Row="1" Grid.ColumnSpan="2" x:Name="MainGrid">
                <DataGrid x:Name="DataGrid" 
                          AutoGenerateColumns="False"
                          IsEnabled="{Binding IsFileLoaded}"
                          AlternatingRowBackground="LightYellow" 
                          ItemsSource="{Binding DataRecords}">
                    <DataGrid.Columns>
                        <DataGridTextColumn 
                            Header="Name" 
                            Binding="{Binding DataRecordName}" 
                            Width="*"/>
                        <DataGridTextColumn 
                            Header="Description" 
                            Binding="{Binding Description}" 
                            Width="2*"/>
                        <DataGridTextColumn 
                            IsReadOnly="True" 
                            Header="Created" 
                            Binding="{Binding CreatedDate, Converter={StaticResource DateTextConverter}}" 
                            Width="0.75*"/>
                        <DataGridTextColumn 
                            IsReadOnly="True" 
                            Header="Modified" 
                            Binding="{Binding DateModified, Converter={StaticResource DateTextConverter}}" 
                            Width="0.75*"/>
                    </DataGrid.Columns>
                </DataGrid>
            </Grid>
            <Grid Grid.Row="2" x:Name="CloseGrid">
                <Button HorizontalAlignment="Left" 
                        Margin="30,0" 
                        Content="Close" 
                        FontSize="32" 
                        Width="100" 
                        Height="50" 
                        Command="{Binding CloseCommand}"/>
            </Grid>
            <Grid Grid.Row="2" Grid.Column="1" x:Name="SaveGrid" IsEnabled="{Binding IsFileLoaded}">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition/>
                        <ColumnDefinition/>
                    </Grid.ColumnDefinitions>
                    <Grid HorizontalAlignment="Right" Margin="20,10,0,0" >
                        <Grid.RowDefinitions>
                            <RowDefinition/>
                            <RowDefinition/>
                        </Grid.RowDefinitions>
                        <RadioButton Content="XML" FontSize="20" GroupName="FormatGroup" 
                                     IsChecked="{Binding IsFileXml}"  
                                     Command="{Binding XmlSelectedCommand}"/>
                        <RadioButton Content="JSON" FontSize="20" GroupName="FormatGroup" Grid.Row="1"
                                     IsChecked="{Binding IsFileXml, Converter={StaticResource InverseBooleanConverter}}" 
                                     Command="{Binding JsonSelectedCommand}"/>
                    </Grid>
                    <Button Grid.Column="1" 
                            Content="Save" 
                            FontSize="32" 
                            Width="100" 
                            Height="50" 
                            x:Name="SaveButton" 
                            Command="{Binding SaveCommand}"/>
                </Grid>
            </Grid>
        </Grid>
    </Grid>
</view:PatternzView>
